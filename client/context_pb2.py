# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: context.proto
# Protobuf Python Version: 6.31.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    0,
    '',
    'context.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rcontext.proto\x12\x03mcp\"&\n\x0e\x43ontextRequest\x12\x14\n\x0c\x63luster_name\x18\x01 \x01(\t\"M\n\x0f\x43ontextResponse\x12\x1a\n\x12kubernetes_version\x18\x01 \x01(\t\x12\x1e\n\x06\x63harts\x18\x02 \x03(\x0b\x32\x0e.mcp.HelmChart\"=\n\tHelmChart\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x11\n\tnamespace\x18\x03 \x01(\t2N\n\x13ModelContextService\x12\x37\n\nGetContext\x12\x13.mcp.ContextRequest\x1a\x14.mcp.ContextResponseB\x1bZ\x19mcp_eks_adapter/proto;mcpb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'context_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z\031mcp_eks_adapter/proto;mcp'
  _globals['_CONTEXTREQUEST']._serialized_start=22
  _globals['_CONTEXTREQUEST']._serialized_end=60
  _globals['_CONTEXTRESPONSE']._serialized_start=62
  _globals['_CONTEXTRESPONSE']._serialized_end=139
  _globals['_HELMCHART']._serialized_start=141
  _globals['_HELMCHART']._serialized_end=202
  _globals['_MODELCONTEXTSERVICE']._serialized_start=204
  _globals['_MODELCONTEXTSERVICE']._serialized_end=282
# @@protoc_insertion_point(module_scope)
